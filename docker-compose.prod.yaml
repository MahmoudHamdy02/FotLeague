services:
  backend:
    image: mahmoudhamdy02/fotleague:backend
    expose:
      - 3000
    environment:
      - PORT=${PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=fotleague
      - SESSION_SECRET=${SESSION_SECRET}
    ports:
      - "${PORT}:3000"
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "node dist/server.js"
    healthcheck:
      test: ["CMD-SHELL", '[[ $(curl -sw "%{http_code}" -o /dev/null http://localhost:3000) == "200" ]] && exit 0']
      interval: 15s
      timeout: 30s
      retries: 15
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=fotleague
    volumes:
      - fotleague-db:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d fotleague"]
      interval: 15s
      timeout: 30s
      retries: 15
  python:
    image: mahmoudhamdy02/fotleague:scraping
    environment:
      - PYTHONUNBUFFERED=1
      - PORT=${PORT}
    depends_on:
      backend:
        condition: service_healthy

volumes:
  fotleague-db: